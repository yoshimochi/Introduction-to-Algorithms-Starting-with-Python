# 壁を９、通路を０、ゴールを１で表現
START_LOG = '処理開始'
END_LOG = '処理終了'
maze = [
    [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
    [9, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 9],
    [9, 0, 9, 0, 0, 0, 9, 9, 0, 9, 9, 9],
    [9, 0, 0, 9, 0, 9, 0, 0, 0, 9, 0, 9],
    [9, 0, 9, 0, 9, 0, 0, 9, 9, 0, 9, 9],
    [9, 9, 0, 0, 0, 9, 0, 9, 0, 0, 0, 9],
    [9, 0, 0, 0, 9, 0, 9, 0, 0, 9, 1, 9],
    [9, 0, 9, 0, 0, 0, 0, 9, 0, 0, 9, 9],
    [9, 0, 0, 9, 0, 9, 0, 0, 9, 0, 0, 9],
    [9, 0, 9, 0, 9, 0, 9, 0, 0, 9, 0, 9],
    [9, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 9],
    [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
]

# スタート位置(x座標、y座標、移動回数)をセット
pos = [[1, 1, 0]]

print(START_LOG)

while len(pos) > 0:
    x, y, depth = pos.pop(0) # リストから探索する位置を取得

    # ゴールに着くと終了
    if maze[x][y] == 1:
        print(depth)
        print(END_LOG)
        break

    #　探索済みとしてセット
    maze[x][y] == 2

    # 上下左右を探索
    if maze[x - 1][y] < 2:
        pos.append([x - 1, y, depth + 1])
    if maze[x + 1][y] < 2:
        pos.append([x + 1, y, depth + 1])
    if maze[x][y - 1] < 2:
        pos.append([x, y - 1, depth + 1])
    if maze[x][y + 1] < 2:
        pos.append([x, y + 1, depth + 1])

    print('{}, {}, {}'.format('現在の移動回数は', depth, 'です'))